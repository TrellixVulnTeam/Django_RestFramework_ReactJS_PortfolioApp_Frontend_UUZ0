{"ast":null,"code":"import { GiArcTriomphe } from 'react-icons/gi';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESSS, USER_LOADED_FAIL } from '../actions/types';\nconst initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  user: null\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(\"type\", action.type);\n\n  if (action.type == LOGIN_SUCCESS) {\n    console.log(\"LOGIN_SUCCESS\");\n    localStorage.setItem('access', action.payload.access);\n    localStorage.setItem('refresh', action.payload.refresh);\n    return { ...state,\n      isAuthenticated: true,\n      access: action.payload.access,\n      refresh: action.payload.refresh\n    };\n  } else if (action.type === LOGIN_FAIL) {\n    localStorage.removeItem('access');\n    localStorage.removeItem('refresh');\n    return { ...state,\n      access: null,\n      refresh: null,\n      isAuthenticated: false,\n      user: null\n    };\n  } else if (action.type === USER_LOADED_FAIL) {\n    return { ...state,\n      user: null\n    };\n  } else if (action.type === USER_LOADED_SUCCESSS) {\n    return { ...state,\n      user: action.payload\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/alex/Documents/Auth_System/frontend/src/reducers/reducer.js"],"names":["GiArcTriomphe","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESSS","USER_LOADED_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","reducer","state","action","console","log","type","setItem","payload","removeItem"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAAQC,aAAR,EAAsBC,UAAtB,EAAiCC,oBAAjC,EAAsDC,gBAAtD,QAA6E,kBAA7E;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADS;AAEjBC,EAAAA,OAAO,EAAEF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFQ;AAGjBE,EAAAA,eAAe,EAAE,IAHA;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;;AASA,MAAMC,OAAO,GAAE,CAACC,KAAK,GAACR,YAAP,EAAqBS,MAArB,KAA8B;AAEzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,MAAM,CAACG,IAA1B;;AACC,MAAIH,MAAM,CAACG,IAAP,IAAehB,aAAnB,EAAiC;AAC1Bc,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAT,IAAAA,YAAY,CAACW,OAAb,CAAqB,QAArB,EAA+BJ,MAAM,CAACK,OAAP,CAAeb,MAA9C;AACAC,IAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCJ,MAAM,CAACK,OAAP,CAAeV,OAA/C;AACA,WAAO,EACH,GAAGI,KADA;AAEHH,MAAAA,eAAe,EAAE,IAFd;AAGHJ,MAAAA,MAAM,EAAEQ,MAAM,CAACK,OAAP,CAAeb,MAHpB;AAIHG,MAAAA,OAAO,EAAEK,MAAM,CAACK,OAAP,CAAeV;AAJrB,KAAP;AAMH,GAVJ,MAWK,IAAIK,MAAM,CAACG,IAAP,KAAcf,UAAlB,EAA6B;AAC3BK,IAAAA,YAAY,CAACa,UAAb,CAAwB,QAAxB;AACAb,IAAAA,YAAY,CAACa,UAAb,CAAwB,SAAxB;AACA,WAAO,EACH,GAAGP,KADA;AAEHP,MAAAA,MAAM,EAAE,IAFL;AAGHG,MAAAA,OAAO,EAAE,IAHN;AAIHC,MAAAA,eAAe,EAAE,KAJd;AAKHC,MAAAA,IAAI,EAAE;AALH,KAAP;AAON,GAVI,MAWD,IAAIG,MAAM,CAACG,IAAP,KAAeb,gBAAnB,EAAqC;AAClC,WAAO,EACH,GAAGS,KADA;AAEHF,MAAAA,IAAI,EAAE;AAFH,KAAP;AAGE,GAJL,MAMA,IAAIG,MAAM,CAACG,IAAP,KAAcd,oBAAlB,EAAwC;AACrC,WAAM,EACF,GAAIU,KADF;AAEFF,MAAAA,IAAI,EAACG,MAAM,CAACK;AAFV,KAAN;AAKH,GANA,MAOA;AACD,WAAON,KAAP;AACH;AACJ,CAzCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import { GiArcTriomphe } from 'react-icons/gi';\nimport {LOGIN_SUCCESS,LOGIN_FAIL,USER_LOADED_SUCCESSS,USER_LOADED_FAIL} from '../actions/types';\n\n\n\n\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\n\n\nconst reducer =(state=initialState, action)=>{\n\n    console.log(\"type\",action.type)\n     if (action.type == LOGIN_SUCCESS){\n            console.log(\"LOGIN_SUCCESS\")\n            localStorage.setItem('access', action.payload.access);\n            localStorage.setItem('refresh', action.payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: action.payload.access,\n                refresh: action.payload.refresh\n            }\n        }\n     else if (action.type===LOGIN_FAIL){\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n     }\n    else if (action.type=== USER_LOADED_FAIL) {\n            return {\n                ...state,\n                user: null\n            }}\n\n    else if (action.type===USER_LOADED_SUCCESSS) {\n            return{\n                ... state,\n                user:action.payload\n\n            }\n        }\n    else {\n        return state\n    }\n}      \nexport default reducer;"]},"metadata":{},"sourceType":"module"}