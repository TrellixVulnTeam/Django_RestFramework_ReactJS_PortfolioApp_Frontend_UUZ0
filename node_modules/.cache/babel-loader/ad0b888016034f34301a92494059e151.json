{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESSS, USER_LOADED_FAIL } from './types';\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/auth/user/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESSS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  console.log(\"we are good to go backend sites\");\n  const config = {\n    headers: {\n      Accept: \"application/json\",\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const response = await axios.post(`http://127.0.0.1:8000/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n    dispatch(load_user());\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/alex/Documents/Auth_System/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESSS","USER_LOADED_FAIL","load_user","dispatch","localStorage","getItem","config","headers","response","get","process","env","REACT_APP_API_URL","type","payload","data","error","login","email","password","console","log","Accept","body","JSON","stringify","post"],"mappings":"AAAA,OAAQA,KAAR,MAAmB,OAAnB;AAGA,SACIC,aADJ,EAECC,UAFD,EAGEC,oBAHF,EAIAC,gBAJA,QAKO,SALP;AASA,OAAO,MAAMC,SAAS,GAAE,MAAK,MAAMC,QAAN,IAAgB;AACzC,MAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC;AAC9B,UAAMC,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAiB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAFlD;AAGJ,kBAAS;AAHL;AADC,KAAb;;AAQA,QAAG;AACC,YAAMG,QAAQ,GAAG,MAAOX,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAA3C,EAA2DN,MAA3D,CAAxB;AAEAH,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAACb,oBADA;AAELc,QAAAA,OAAO,EAACN,QAAQ,CAACO;AAFZ,OAAD,CAAR;AAIF,KAPF,CAQC,OAAMC,KAAN,EAAY;AAERb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAACZ;AADA,OAAD,CAAR;AAKH;AACL,GAzBD,MA2BI;AACAE,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACZ;AADA,KAAD,CAAR;AAIH;AAEJ,CAnCM;AAoCP,OAAO,MAAMgB,KAAK,GAAC,CAACC,KAAD,EAAQC,QAAR,KAAoB,MAAMhB,QAAN,IAAgB;AACnDiB,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAGA,QAAMf,MAAM,GAAC;AACTC,IAAAA,OAAO,EAAE;AACLe,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAe;AAFV;AADA,GAAb;AAOA,QAAMC,IAAI,GAACC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAX;;AAGA,MAAG;AACA,UAAMX,QAAQ,GAAE,MAAOX,KAAK,CAAC6B,IAAN,CAAY,wCAAZ,EAAqDH,IAArD,EAA2DjB,MAA3D,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACf,aADA;AAELgB,MAAAA,OAAO,EAACN,QAAQ,CAACO;AAFZ,KAAD,CAAR;AAIAZ,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACF,GARD,CASA,OAAMc,KAAN,EAAY;AAERb,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACd;AADA,KAAD,CAAR;AAKH;AACJ,CA/BM","sourcesContent":["import  axios from 'axios';\n\n\nimport {\n    LOGIN_SUCCESS,\n LOGIN_FAIL,\n  USER_LOADED_SUCCESSS,\nUSER_LOADED_FAIL\n} from './types';\n\n\n\nexport const load_user= ()=> async dispatch=>{\n    if(localStorage.getItem('access')){\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`JWT ${localStorage.getItem('access')}`,\n                'Accept':'application/json'\n            }\n        }\n\n        try{\n            const response = await  axios.get(`${process.env.REACT_APP_API_URL}/auth/user/me/`,config)\n     \n            dispatch({\n                type:USER_LOADED_SUCCESSS,\n                payload:response.data\n            })\n         }\n         catch(error){\n           \n             dispatch({\n                 type:USER_LOADED_FAIL\n                 \n             })\n     \n         }\n    }\n\n    else{\n        dispatch({\n            type:USER_LOADED_FAIL\n            \n        })\n    }\n\n}\nexport const login=(email, password)=> async dispatch=>{\n    console.log(\"we are good to go backend sites\")\n\n\n    const config={\n        headers: {\n            Accept: \"application/json\",\n            'Content-Type':'application/json'\n        }\n    }\n\n    const body=JSON.stringify({ email, password})\n\n\n    try{\n       const response= await  axios.post(`http://127.0.0.1:8000/auth/jwt/create/`, body, config)\n\n       dispatch({\n           type:LOGIN_SUCCESS,\n           payload:response.data\n       })\n       dispatch(load_user())\n    }\n    catch(error){\n      \n        dispatch({\n            type:LOGIN_FAIL\n            \n        })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}