{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESSS, USER_LOADED_FAIL } from './types';\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/auth/user/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESSS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  console.log(\"body\", body);\n\n  try {\n    // `${process.env.REACT_APP_API_URL}/auth/jwt/create/`\n    const res = await axios.post('http://127.0.0.1:8000/auth/jwt/create/', body, config);\n    console.log(\"haygig\", res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    }); // dispatch(load_user());\n  } catch (err) {\n    console.log(\"derdin ne\", err);\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // export const login=(email, password)=> async dispatch=>{\n//     console.log(\"we are good to go backend sites\")\n//     const config={\n//         headers: {\n//             Accept: \"application/json\",\n//             'Content-Type':'application/json'\n//         }\n//     }\n//     const body=JSON.stringify({ email, password})\n//     try{\n//        const response= await  axios.post(`http://127.0.0.1:8000/auth/jwt/create/`, body, config)\n//        dispatch({\n//            type:LOGIN_SUCCESS,\n//            payload:response.data\n//        })\n//        dispatch(load_user())\n//     }\n//     catch(error){\n//         dispatch({\n//             type:LOGIN_FAIL\n//         })\n//     }\n// }","map":{"version":3,"sources":["/home/alex/Documents/Auth_System/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESSS","USER_LOADED_FAIL","load_user","dispatch","localStorage","getItem","config","headers","response","get","process","env","REACT_APP_API_URL","type","payload","data","error","login","email","password","body","JSON","stringify","console","log","res","post","err"],"mappings":"AAAA,OAAQA,KAAR,MAAmB,OAAnB;AAGA,SACIC,aADJ,EAECC,UAFD,EAGEC,oBAHF,EAIAC,gBAJA,QAKO,SALP;AASA,OAAO,MAAMC,SAAS,GAAE,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC;AAC9B,UAAMC,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,yBAAiB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B;AAFlD;AADC,KAAb;;AAQA,QAAG;AACC,YAAMG,QAAQ,GAAG,MAAOX,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAA3C,EAA2DN,MAA3D,CAAxB;AAEAH,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAACb,oBADA;AAELc,QAAAA,OAAO,EAACN,QAAQ,CAACO;AAFZ,OAAD,CAAR;AAIF,KAPF,CAQC,OAAMC,KAAN,EAAY;AAETb,MAAAA,QAAQ,CAAC;AACJU,QAAAA,IAAI,EAACZ;AADD,OAAD,CAAR;AAKF;AACL,GAzBD,MA2BI;AACAE,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACZ;AADA,KAAD,CAAR;AAIH;AAEJ,CAnCM;AAqCP,OAAO,MAAMgB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMhB,QAAN,IAAkB;AAExD,QAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMa,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEJ,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB;;AAEA,MAAI;AACA;AACA,UAAMK,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,IAAN,CAAW,wCAAX,EAAqDN,IAArD,EAA2Dd,MAA3D,CAAlB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,GAArB;AAEAtB,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEf,aADD;AAELgB,MAAAA,OAAO,EAAEW,GAAG,CAACV;AAFR,KAAD,CAAR,CALA,CAUA;AACH,GAXD,CAWE,OAAOY,GAAP,EAAY;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,GAAzB;AACAxB,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH;AACJ,CA5BM,C,CA6BP;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA","sourcesContent":["import  axios from 'axios';\n\n\nimport {\n    LOGIN_SUCCESS,\n LOGIN_FAIL,\n  USER_LOADED_SUCCESSS,\nUSER_LOADED_FAIL\n} from './types';\n\n\n\nexport const load_user= () => async dispatch => {\n    if(localStorage.getItem('access')){\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`JWT ${localStorage.getItem('access')}`,\n                \n            }\n        }\n\n        try{\n            const response = await  axios.get(`${process.env.REACT_APP_API_URL}/auth/user/me/`,config)\n     \n            dispatch({\n                type:USER_LOADED_SUCCESSS,\n                payload:response.data\n            })\n         }\n         catch(error){\n           \n            dispatch({\n                 type:USER_LOADED_FAIL\n                 \n             })\n     \n         }\n    }\n\n    else{\n        dispatch({\n            type:USER_LOADED_FAIL\n            \n        })\n    }\n\n}\n\nexport const login = (email, password) => async dispatch => {\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n    console.log(\"body\", body)\n\n    try {\n        // `${process.env.REACT_APP_API_URL}/auth/jwt/create/`\n        const res = await axios.post('http://127.0.0.1:8000/auth/jwt/create/', body, config);\n        console.log(\"haygig\",res)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        // dispatch(load_user());\n    } catch (err) {\n        console.log(\"derdin ne\", err)\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n// export const login=(email, password)=> async dispatch=>{\n//     console.log(\"we are good to go backend sites\")\n\n\n//     const config={\n//         headers: {\n//             Accept: \"application/json\",\n//             'Content-Type':'application/json'\n//         }\n//     }\n\n//     const body=JSON.stringify({ email, password})\n\n\n//     try{\n//        const response= await  axios.post(`http://127.0.0.1:8000/auth/jwt/create/`, body, config)\n\n//        dispatch({\n//            type:LOGIN_SUCCESS,\n//            payload:response.data\n//        })\n//        dispatch(load_user())\n//     }\n//     catch(error){\n      \n//         dispatch({\n//             type:LOGIN_FAIL\n            \n//         })\n\n//     }\n// }"]},"metadata":{},"sourceType":"module"}